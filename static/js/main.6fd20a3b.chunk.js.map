{"version":3,"sources":["components/Searchbar/Searchbar.jsx","images/default.jpg","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","services/images-api.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/Notification/Notification.jsx","components/AboutAppInfo/AboutAppInfo.jsx","App.jsx","index.js"],"names":["Searchbar","state","searchQuery","handleSearchChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","resetPage","className","this","type","id","onChange","autoComplete","autoFocus","placeholder","onClick","cleareImages","Component","ImageGalleryItem","openModal","webformatURL","defaultImage","largeImageURL","tags","evt","target","dataset","source","alt","src","ImageGallery","images","map","fetchImages","page","a","searchParams","URLSearchParams","image_type","orientation","q","per_page","key","url","fetch","response","json","fetchObject","hits","imagesArray","length","Promise","reject","Error","Button","Loading","color","height","width","modalRoot","document","querySelector","Modal","isLoading","handleKeyDown","code","closeModal","handleBackdropClick","isLoadingStop","onLoadClick","href","require","saveAs","window","addEventListener","removeEventListener","createPortal","onLoad","modalImage","modalImageAlt","Notification","message","AboutAppInfo","App","showModal","error","startAbout","getSearchQuerry","pageIncrement","prevState","toggleIsLoading","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","prevProps","prevSearchQuerry","nextSearchQuerry","prevPage","nextpage","prevImages","prevmodalImage","nextmodalImage","prevShowModal","nextshowModal","setTimeout","imageAPI","then","catch","finally","scroll","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6fd20a3b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../Searchbar/Searchbar.scss';\n\nclass Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    resetPage: PropTypes.func.isRequired,\n    cleareImages: PropTypes.func.isRequired,\n  };\n  state = {\n    searchQuery: '',\n  };\n\n  handleSearchChange = (event) => {\n    this.setState({\n      searchQuery: event.currentTarget.value.toLowerCase(),\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (this.state.searchQuery.trim() === '') {\n      this.props.onSubmit(this.state.searchQuery.trim());\n      return;\n    }\n\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n    this.props.resetPage();\n  };\n\n  render() {\n    return (\n      <header className=\"searchbar\">\n        <form className=\"searchform\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"searchform__button\">\n            <span className=\"searchform__button--label\">Search</span>\n          </button>\n\n          <input\n            id=\"anchor\"\n            className=\"searchform__input\"\n            type=\"text\"\n            value={this.state.searchQuery}\n            onChange={this.handleSearchChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n\n        <button\n          className=\"clear__button\"\n          type=\"button\"\n          onClick={this.props.cleareImages}\n        ></button>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../ImageGalleryItem/ImageGalleryItem.scss';\nimport defaultImage from '../../images/default.jpg';\n\nconst ImageGalleryItem = ({\n  openModal,\n  webformatURL = defaultImage,\n  largeImageURL,\n  tags,\n}) => {\n  return (\n    <>\n      <li className=\"gallery__item\">\n        <img\n          onClick={(evt) =>\n            openModal(evt.target.dataset.source, evt.target.alt)\n          }\n          src={webformatURL}\n          alt={tags}\n          data-source={largeImageURL}\n          className=\"gallery__image\"\n        />\n      </li>\n    </>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  openModal: PropTypes.func.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport '../ImageGallery/ImageGallery.scss';\n\nconst ImageGallery = ({ images, openModal }) => {\n  return (\n    <ul className=\"gallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n        <ImageGalleryItem\n          key={id}\n          openModal={openModal}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tags={tags}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape).isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","const BASE_URL = 'https://pixabay.com/api';\nconst API_KEY = '22356210-f5a6fb995cd777b2b01184cc9';\n\nconst fetchImages = async (searchQuery, page) => {\n  const searchParams = new URLSearchParams({\n    image_type: 'photo',\n    orientation: 'horizontal',\n    q: searchQuery,\n    page,\n    per_page: 12,\n    key: `${API_KEY}`,\n  });\n  const url = `${BASE_URL}/?${searchParams}`;\n\n  const response = await fetch(url);\n  const fetchObject = await response.json();\n  const imagesArray = await fetchObject.hits;\n\n  if (imagesArray.length !== 0) {\n    return imagesArray;\n  }\n\n  return Promise.reject(new Error(`No pictures with name \"${searchQuery}\"`));\n};\n\nexport default fetchImages;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../Button/Button.scss';\n\nconst Button = ({ page }) => {\n  return (\n    <>\n      <button type=\"button\" className=\"button\" onClick={page}>\n        Load more\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  page: PropTypes.func,\n};\n\nexport default Button;\n","import React from 'react';\nimport '../Loader/Loader.scss';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Loading = () => {\n  return (\n    <Loader\n      className=\"loader\"\n      type=\"Circles\"\n      color=\"#303f9f\"\n      height={100}\n      width={100}\n      // timeout={500}\n    />\n  );\n};\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport Loading from '../Loader';\nimport './Modal.scss';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  static propTypes = {\n    closeModal: PropTypes.func.isRequired,\n    modalImage: PropTypes.string.isRequired,\n    modalImageAlt: PropTypes.string.isRequired,\n  };\n\n  state = {\n    isLoading: true,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = (evt) => {\n    if (evt.code === 'Escape') {\n      this.props.closeModal();\n    }\n  };\n\n  handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      this.props.closeModal();\n    }\n  };\n\n  isLoadingStop = () => {\n    this.setState({ isLoading: false });\n  };\n\n  onLoadClick = (href) => {\n    const FileSaver = require('file-saver');\n    FileSaver.saveAs(href, 'image.jpg');\n    this.props.closeModal();\n  };\n\n  render() {\n    const isLoading = this.state.isLoading;\n    return createPortal(\n      <div className=\"overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"modal\">\n          {isLoading && <Loading />}\n          <div className=\"image__wrapper\">\n            <img\n              onLoad={this.isLoadingStop}\n              className=\"modal__image\"\n              src={this.props.modalImage}\n              alt={this.props.modalImageAlt}\n            />\n\n            <button\n              className=\"downloade__button\"\n              type=\"button\"\n              onClick={() => this.onLoadClick(this.props.modalImage)}\n            ></button>\n          </div>\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n","import React from 'react';\nimport '../Notification/Notification.scss';\n\nconst Notification = ({ message }) => (\n  <h1 className=\"notification__error\">{message}</h1>\n);\n\nexport default Notification;\n","import React from 'react';\nimport '../AboutAppInfo/AboutAppInfo.scss';\n\nconst AboutAppInfo = () => {\n  return (\n    <div className=\"about\">\n      <h2 className=\"about__title\">About this API</h2>\n      <p className=\"about__description\">\n        Good day, my friend! I wanted to tell you a little bit about this app.\n        This application for searching images by search word. To start using,\n        enter the text in the search. To loade more images, you will see a\n        button to loade more. If no images are displayed for your request, you\n        will see notifications. Re-enter your request. When you enter a blank\n        value in the search field, you will also see a notification. You can\n        also download in your Device the image you like. I wish you a pleasant\n        use. Thank you for reading this information to the end!\n      </p>\n\n      <a className=\"anchor__link\" href=\"#anchor\">\n        Get Start\n      </a>\n    </div>\n  );\n};\n\nexport default AboutAppInfo;\n","import React, { Component } from 'react';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport imageAPI from './services/images-api';\nimport Button from './components/Button';\nimport Loading from './components/Loader';\nimport Modal from './components/Modal';\nimport Notification from './components/Notification';\nimport AboutAppInfo from './components/AboutAppInfo';\nimport './App.scss';\n\nclass App extends Component {\n  state = {\n    searchQuery: null,\n    page: 1,\n    images: [],\n    isLoading: false,\n    showModal: false,\n    modalImage: '',\n    modalImageAlt: '',\n    error: null,\n    startAbout: true,\n  };\n\n  scroll() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevSearchQuerry = prevState.searchQuery;\n    const nextSearchQuerry = this.state.searchQuery;\n    const prevPage = prevState.page;\n    const nextpage = this.state.page;\n    const prevImages = prevState.images;\n    const prevmodalImage = prevState.modalImage;\n    const nextmodalImage = this.state.modalImage;\n    const prevShowModal = prevState.showModal;\n    const nextshowModal = this.state.showModal;\n\n    if (prevmodalImage !== nextmodalImage) {\n      return;\n    }\n\n    if (prevSearchQuerry !== nextSearchQuerry) {\n      this.toggleIsLoading();\n      this.setState({ images: [], error: null, startAbout: false });\n\n      if (nextSearchQuerry === '') {\n        setTimeout(() => {\n          this.setState({\n            error: { message: 'Ops, empty. Please enter something...' },\n          });\n          this.toggleIsLoading();\n        }, 500);\n        return;\n      }\n\n      imageAPI(nextSearchQuerry, nextpage)\n        .then((images) => this.setState({ images }))\n        .catch((error) => this.setState({ error }))\n        .finally(this.toggleIsLoading);\n    }\n\n    if (nextpage === 1) {\n      return;\n    }\n\n    if (prevPage !== nextpage) {\n      this.toggleIsLoading();\n\n      imageAPI(prevSearchQuerry, nextpage)\n        .then((images) => {\n          this.setState({ images: [...prevImages, ...images] });\n        })\n        .catch((error) =>\n          this.setState({\n            images: [],\n            error: { message: 'Sorry, no more pictures ...' },\n          })\n        )\n        .finally(this.toggleIsLoading);\n    }\n\n    if (!prevShowModal && !nextshowModal) {\n      this.scroll();\n    }\n  }\n\n  getSearchQuerry = (searchQuery) => this.setState({ searchQuery });\n\n  pageIncrement = () =>\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n\n  resetPage = () => this.setState({ page: 1 });\n\n  toggleIsLoading = () =>\n    this.setState(({ isLoading }) => ({ isLoading: !isLoading }));\n\n  toggleModal = () =>\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n\n  openModal = (url, alt) => {\n    this.toggleModal();\n\n    this.setState(({ modalImage }) => ({\n      modalImage: url,\n      modalImageAlt: alt,\n    }));\n  };\n\n  closeModal = () => {\n    this.toggleModal();\n\n    this.setState(({ modalImage }) => ({\n      modalImage: '',\n      modalImageAlt: '',\n    }));\n  };\n\n  cleareImages = () => {\n    this.setState({ images: [] });\n    this.setState({ startAbout: true });\n  };\n\n  render() {\n    const {\n      images,\n      showModal,\n      modalImage,\n      modalImageAlt,\n      error,\n      isLoading,\n      startAbout,\n    } = this.state;\n    return (\n      <main className=\"app\">\n        <Searchbar\n          onSubmit={this.getSearchQuerry}\n          resetPage={this.resetPage}\n          cleareImages={this.cleareImages}\n        />\n\n        {error && <Notification message={error.message} />}\n\n        {startAbout ? (\n          <AboutAppInfo />\n        ) : (\n          <ImageGallery images={images} openModal={this.openModal} />\n        )}\n\n        {isLoading && <Loading />}\n\n        {images.length >= 12 ? <Button page={this.pageIncrement} /> : null}\n\n        {showModal && (\n          <Modal\n            closeModal={this.closeModal}\n            modalImage={modalImage}\n            modalImageAlt={modalImageAlt}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}